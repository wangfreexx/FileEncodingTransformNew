<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>